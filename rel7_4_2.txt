coal 7.4.2の機能改善およびバグｆｉｘ
********************************
*         機 能 改 善          *
********************************
<2025.XX.XX>
(1)
   -->

********************************
*           Bug fix            *
********************************
<2025.1.1>
(1)関数の中でローカル配列aを定義し、これを新規のPRIVATE変数yにデータモードで代入し、関数から復帰後に
   yをPRINTすると「変数(y)の配列は無効です」のエラーになる。
   [原因]新規にスコープ付き変数を生成した後に、代入前の変数の初期化でスコープ情報がクリアされてしまい、
         配列データをコピーした後で、正しいgidが設定できなくなっていた。
   [措置]変数の初期化前にスコープ情報を退避し、初期化後に戻すようにした。
   --> cl_gx_compile.c

<2025.1.5>
(2)_add_wkstr_mcat()で、mcatが使われないようになっている。
   [原因]区切り処理に入る前に、_add_wkstr_mcat()を呼び、_add_wkstr_mcat()の中でmcat->mc_iposが
         ゼロのときは、wkstrとhをそのまま使い、mcat.mc_iposがゼロでないときは、mcatのデータを
         使うようにしていたが、mcat->mc_iposの初期値がゼロのため、mcatが使われることがないように
         なっていた。
   [措置](1)_add_wkstr_mcat()の中でBUFLENを超えそうなときは、mcatにデータを追加するようにした。
            また、opt追加し、opt<>0で、mcat->mc_ipos<>0のときは、mcatを使うようにした。
         (2)区切り処理前は、opt=0とし、区切り処理の前は、opt=1とした。
         (3)区切り処理の前で_add_wkstr_mcat()を呼んだ後に、mcat->mc_ipos>0のときは、mcatの
            データを使うようにした。
   --> cllex.c

<2025.02.27>
(3)test_max_minを実行すると落ちる
   [原因]操作データがa(int型)、b(decimal型)のときに、結果がdecimalになるため、結果を返すpInfoParmに
         decimalデータをセットする際、'V'オプションでセットしている。pInfoParmは、int型のため、
         pInfoParm->pi_dataは自分の中を指しており、ここに、decimalデータをコピーし、pInfoParmWの
         アドレス域を壊していた。
   [措置]pInfoParmが、int型のときは、オプションを' 'とした。
   --> cl_cmpt_cmp.c

<2025.XX.XX>
(4)
   [原因]
   [措置]
   --> 

